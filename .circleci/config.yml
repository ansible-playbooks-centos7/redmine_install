---
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.3.1

executors:
  molecule:
    docker:
      - image: ghcr.io/docker-hub-tm/circleci-executors_molecule/molecule:latest

jobs:
  build:
    executor: molecule
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Set latest AMI image id to environment variables(CentOS8)
          command: |
            AMI_ID=$(aws ec2 describe-images \
            --owners $AMI_OWNER_ID \
            --filters "Name=name,Values=centos8*" \
            --query 'Images[*][CreationDate, ImageId, Name]' \
            --output text | sort -r | awk 'NR==1 {print $2}')

            echo "export AMI_ID=$AMI_ID" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Set timestamp for making sure Molecule would create unique AWS resources(CentOS8)
          command: |
            TIMESTAMP=$(date --date "9 hours" "+%Y%m%d_%H:%M:%S")

            echo "export PLATFORM_NAME=redmine_install_molecule_${TIMESTAMP}" >> $BASH_ENV
            echo "export KEYPAIR_NAME=redmine_install_molecule_${TIMESTAMP}" >> $BASH_ENV
            echo "export SECURITY_GROUP_NAME=redmine_install_molecule_${TIMESTAMP}" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Create galaxy dependencies file in 'molecule/vm/'
          command: |
            cp roles/requirements.yml molecule/vm/requirements.yml
      - run:
          name: Install required Ansible Collections
          command: |
            ansible-galaxy collection install community.molecule
      - run:
          name: Test with molecule
          command: |
            molecule test --scenario-name vm
          environment:
            # AMI_ID: sotred in system environment variables
            # AWS_ACCESS_KEY_ID: sotred in CircleCI environment variables
            # AWS_DEFAULT_REGION: sotred in CircleCI environment variables
            # AWS_SECRET_ACCESS_KEY: stored in CircleCI environment variables
            # EC2_REGION: stored in CircleCI environment variables
            # KEYPAIR_NAME: sotred in CircleCI environment variables
            # PLATFORM_NAME: sotred in CircleCI environment variables
            # SECURITY_GROUP_NAME: sotred in CircleCI environment variables
            # VPC_SUBNET_ID: sotred in CircleCI environment variables
            ANSIBLE_FORCE_COLOR: '1'
            PROFILE_TASKS_SORT_ORDER: 'none'
            PROFILE_TASKS_TASK_OUTPUT_LIMIT: '200'
            PY_COLORS: '1'
            TZ: 'Asia/Tokyo'
      - run:
          name: Set latest AMI image id to environment variables(CentOS7)
          command: |
            AMI_ID=$(aws ec2 describe-images \
            --owners $AMI_OWNER_ID \
            --filters "Name=name,Values=centos7*" \
            --query 'Images[*][CreationDate, ImageId, Name]' \
            --output text | sort -r | awk 'NR==1 {print $2}')

            echo "export AMI_ID=$AMI_ID" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Set timestamp for making sure Molecule would create unique AWS resources(CentOS7)
          command: |
            TIMESTAMP=$(date --date "9 hours" "+%Y%m%d_%H:%M:%S")

            echo "export PLATFORM_NAME=redmine_install_molecule_${TIMESTAMP}" >> $BASH_ENV
            echo "export KEYPAIR_NAME=redmine_install_molecule_${TIMESTAMP}" >> $BASH_ENV
            echo "export SECURITY_GROUP_NAME=redmine_install_molecule_${TIMESTAMP}" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Test with molecule
          command: |
            molecule test --scenario-name vm
          environment:
            # AMI_ID: sotred in system environment variables
            # AWS_ACCESS_KEY_ID: sotred in CircleCI environment variables
            # AWS_DEFAULT_REGION: sotred in CircleCI environment variables
            # AWS_SECRET_ACCESS_KEY: stored in CircleCI environment variables
            # EC2_REGION: stored in CircleCI environment variables
            # KEYPAIR_NAME: sotred in CircleCI environment variables
            # PLATFORM_NAME: sotred in CircleCI environment variables
            # SECURITY_GROUP_NAME: sotred in CircleCI environment variables
            # VPC_SUBNET_ID: sotred in CircleCI environment variables
            ANSIBLE_FORCE_COLOR: '1'
            PROFILE_TASKS_SORT_ORDER: 'none'
            PROFILE_TASKS_TASK_OUTPUT_LIMIT: '200'
            PY_COLORS: '1'
            TZ: 'Asia/Tokyo'
      - run:
          name: Show Ansible version
          command: |
            pip list | grep ansible \
            | GREP_COLORS='mt=01;34' egrep --color=always '[[:digit:]]' \
            | GREP_COLORS='mt=01;34' egrep --color=always '\.' \
            | GREP_COLORS='mt=01;33' egrep --color=always 'ansible.* '
            ansible --version
      - run:
          name: Show Molecule version
          command: molecule --version

workflows:
  version: 2.1
  redmine-install:
    jobs:
      - build:
          context: aws-credentials
